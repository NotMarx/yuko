{"meta":{"generator":"0.10.0","format":20,"date":1637641652403},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Yuko\r\n\r\n[![YukoVersion](https://img.shields.io/npm/v/yuko?color=42B893&label=NPM&logo=Yuko&style=flat-square)](https://npmjs.com/package/yuko)\r\n\r\n**Yuko** is a Discord library written in JavaScript. Both Discord's REST and Gateway are provided through this single library.\r\n\r\n# Installation\r\n\r\nYou'll need NodeJS 14+ installed.\r\n\r\n```\r\nnpm install --save yuko\r\n```\r\n\r\n# Examples\r\n\r\n- More examples can be found [Here](https://github.com/NotMarx/yuko/tree/master/examples).\r\n\r\n```js\r\nconst Yuko = require(\"yuko\");\r\nconst client = new Yuko.Client(\"TOKEN\", { intents: [\"Guilds\", \"GuildMessages\"] });\r\n\r\nclient.on(\"gatewayReady\", () => {\r\n    console.log(`${client.user.username} is Ready!`);\r\n});\r\n\r\nclient.on(\"messageCreate\", (message) => {\r\n    if (message.author.bot) return;\r\n\r\n    if (message.content === \"!ping\") {\r\n        message.channel.createMessage({ content: \"Pong!\" });\r\n    }\r\n});\r\n\r\nclient.connect();\r\n```\r\n\r\n# Resources Links\r\n\r\n- **[Yuko's Official Docs](https://yuko.js.org)** is where you can explore more about the library.\r\n- **[Yuko's GitHub Repository](https://github.com/NotMarx/yuko)** is where the main development of the library happens.\r\n   - **Yuko** official third-party library, **[Yukora](https://github.com/NotMarx/yukora)**\r\n- **[Yuko's Support Server](https://discord.gg/5wP5cCqSHD)** is where you can ask help within the library or to contact me.\r\n\r\n# License\r\n\r\n**Yuko** is released under the [MIT License](https://github.com/NotMarx/yuko/blob/master/LICENSE).","path":"README.md"}}}},"classes":[{"name":"Client","description":"Represents Yuko main client","extends":[[["EventEmitter"]]],"construct":{"name":"Client","description":"Create a client","params":[{"name":"token","description":"The token of the bot","type":[[["String"]]]},{"name":"options","description":"Yuko client options","type":[[["Object"]]]},{"name":"options.allowedMentions","description":"A list of mentions to allow by default when creating/editing messages","optional":true,"type":[[["Object"]]]},{"name":"options.allowedMentions.roles","description":"Whether to allow mention roles or not","optional":true,"default":true,"type":[[["Boolean"]]]},{"name":"options.allowedMentions.users","description":"Whether to allow mentions users or not","optional":true,"default":true,"type":[[["Boolean"]]]},{"name":"options.autoReconnect","description":"Whether to allow Yuko to auto reconnect","optional":true,"type":[[["Boolean"]]]},{"name":"options.imageFormat","description":"The default image format for avatars/icons. Default is \"png\"","optional":true,"default":"\"png\"","type":[[["String"]]]},{"name":"options.imageSize","description":"The default image size for avatars/icons. Default is 128","optional":true,"default":128,"type":[[["String"]]]},{"name":"options.intents","description":"The intents applied","optional":true,"type":[[["Number"]],[["Array","<("],["String","|"],["Number",")>"]]]},{"name":"options.messageCacheLimit","description":"The total message limit to cache","optional":true,"default":125,"type":[[["Number"]]]},{"name":"options.shardCount","description":"The total shards count for the bot to run","optional":true,"default":"\"auto\"","type":[[["Number"]],[["String"]]]}]},"methods":[{"name":"addGuildMemberRole","description":"Add a role to a guild member","params":[{"name":"guildID","description":"The ID of the guild","type":[[["String"]]]},{"name":"memberID","description":"The ID of the member","type":[[["String"]]]},{"name":"roleID","description":"The ID of the role","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":103,"file":"Client.js","path":"lib"}},{"name":"addMessageReaction","description":"Add a reaction to a message","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]},{"name":"messageID","description":"The ID of the message","type":[[["String"]]]},{"name":"reaction","description":"The reaction. `name:id` for custom emoji","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":114,"file":"Client.js","path":"lib"}},{"name":"banGuildMember","description":"Ban a member from a guild","params":[{"name":"guildID","description":"The ID of the guild","type":[[["String"]]]},{"name":"memberID","description":"The ID of the member","type":[[["String"]]]},{"name":"deleteMessageDays","description":"Number of days to delete messages for","optional":true,"default":0,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":129,"file":"Client.js","path":"lib"}},{"name":"bulkDeleteMessages","description":"Bulk delete multiple messages","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]},{"name":"messageIDs","description":"An array of the message IDs","type":[[["Array","<"],["String",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":141,"file":"Client.js","path":"lib"}},{"name":"connect","description":"Connect the bot to Discord gateway","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":167,"file":"Client.js","path":"lib"}},{"name":"createMessage","description":"Create a message","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]},{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embed","description":"An embed objects. Use `options.embeds` to send multiple embeds","optional":true,"type":[[["Object"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["Object",">"]]]},{"name":"options.messageReference","description":"The message reference used when replying to messages","optional":true,"type":[[["Object"]]]},{"name":"options.messageReference.channelID","description":"The ID of the channel where the message was referenced","optional":true,"type":[[["String"]]]},{"name":"options.messageReference.failIfNotExists","description":"Whether to throw an error when the message reference doesn't exist","optional":true,"type":[[["Boolean"]]]},{"name":"options.messageReference.guildID","description":"The ID of the guild where the message was referenced","optional":true,"type":[[["String"]]]},{"name":"options.messageReference.messageID","description":"The ID of the message which was referenced","type":[[["String"]]]},{"name":"options.tts","description":"Whether to send message as Text-to-Speech (TTS)","optional":true,"type":[[["Boolean"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":186,"file":"Client.js","path":"lib"}},{"name":"createUserDM","description":"Create a DM Channel with a user","params":[{"name":"userID","description":"The ID of the user","type":[[["String"]]]}],"returns":[[["Promise","<"],["DMChannel",">"]]],"meta":{"line":229,"file":"Client.js","path":"lib"}},{"name":"deleteMessage","description":"Delete a message","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]},{"name":"messageID","description":"The ID of the message","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":242,"file":"Client.js","path":"lib"}},{"name":"editGuild","description":"Edit a guild","params":[{"name":"guildID","description":"The ID of the guild","type":[[["String"]]]},{"name":"options","description":"The options properties","type":[[["Object"]]]},{"name":"options.afkChannelID","description":"The ID of the AFK channel","optional":true,"type":[[["String"]]]},{"name":"options.afkTimeout","description":"The timeout of AFK in voice channels (in seconds)","optional":true,"type":[[["Number"]]]},{"name":"options.banner","description":"The banner of the guild. Banner image must be as base64 data URI","optional":true,"type":[[["String"]]]},{"name":"options.defaultMessageNotifications","description":"The default message notifications of the guild","optional":true,"type":[[["Number"]]]},{"name":"options.description","description":"The description of the guild","optional":true,"type":[[["String"]]]},{"name":"options.discoverySplash","description":"The discovery splash of the guild. Discoery splash image must be as base 64 URI","optional":true,"type":[[["String"]]]},{"name":"options.explicitContentFilter","description":"The explicit content filter level of the guild","optional":true,"type":[[["Number"]]]},{"name":"options.features","description":"The enabled features of the guild","optional":true,"type":[[["Array","<"],["String",">"]]]},{"name":"options.icon","description":"The icon of the guild. Icon image must be as base64 data URI","optional":true,"type":[[["String"]]]},{"name":"options.name","description":"The name of the guild","optional":true,"type":[[["String"]]]},{"name":"options.ownerID","description":"The ID of the owner which wil be transferred to","optional":true,"type":[[["String"]]]},{"name":"options.preferredLocale","description":"The preferred guild language","optional":true,"type":[[["String"]]]},{"name":"options.publicUpdatesChannelID","description":"The ID of the channel where guild admins will receive Discord notifications","optional":true,"type":[[["String"]]]},{"name":"options.rulesChannelID","description":"The ID of the rule channel","optional":true,"type":[[["String"]]]},{"name":"options.splash","description":"The splash of the guild. Splash image must be as base64 data URI","optional":true,"type":[[["String"]]]},{"name":"options.systemChannelFlags","description":"The flags for the system channel","optional":true,"type":[[["Number"]]]},{"name":"options.systemChannelID","description":"The ID of the system channel","optional":true,"type":[[["String"]]]},{"name":"options.verificationLevel","description":"The verification level","optional":true,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["Guild",">"]]],"meta":{"line":270,"file":"Client.js","path":"lib"}},{"name":"editGuildMember","description":"Edit a guild member","params":[{"name":"guildID","description":"The ID of the guild","type":[[["String"]]]},{"name":"memberID","description":"The ID of the member","type":[[["String"]]]},{"name":"options","description":"The options properties","type":[[["Object"]]]},{"name":"options.channelID","description":"The ID of the voice channel to move the user to","optional":true,"type":[[["String"]]]},{"name":"options.deaf","description":"Deafen the member","optional":true,"type":[[["Boolean"]]]},{"name":"options.mute","description":"Mute the member","optional":true,"type":[[["Boolean"]]]},{"name":"options.nick","description":"Set the member's nickname","optional":true,"type":[[["String"]]]},{"name":"options.roles","description":"An array of role IDs to be add to member","optional":true,"type":[[["Array","<"],["String",">"]]]}],"returns":[[["Promise","<"],["Member",">"]]],"meta":{"line":305,"file":"Client.js","path":"lib"}},{"name":"editMessage","description":"Edit a message","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]},{"name":"messageID","description":"The ID of the message","type":[[["String"]]]},{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["Object",">"]]]},{"name":"options.flags","description":"A number representing flags that will apply to the message","optional":true,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":325,"file":"Client.js","path":"lib"}},{"name":"getMessages","description":"Get multiple messages in a channel\rTodo: Options","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Message",">>"]]],"meta":{"line":343,"file":"Client.js","path":"lib"}},{"name":"removeGuildMember","description":"Remove a member from a guild","params":[{"name":"guildID","description":"The ID of the guild","type":[[["String"]]]},{"name":"memberID","description":"The ID of the member","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":356,"file":"Client.js","path":"lib"}},{"name":"removeGuildMemberRole","description":"Remove a role from a guild member","params":[{"name":"guildID","description":"The ID of the guild","type":[[["String"]]]},{"name":"memberID","description":"The ID of the member","type":[[["String"]]]},{"name":"roleID","description":"The ID of the role","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":367,"file":"Client.js","path":"lib"}},{"name":"removeMessageReaction","description":"Remove a reaction from a message","params":[{"name":"channelID","description":"The ID of the channel","type":[[["String"]]]},{"name":"messageID","description":"The ID of the message","type":[[["String"]]]},{"name":"reaction","description":"The reaction. `name:id` if custom emoji","type":[[["String"]]]},{"name":"userID","description":"The ID of the user of the reaction","optional":true,"default":"\"@me\"","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":379,"file":"Client.js","path":"lib"}}],"meta":{"line":34,"file":"Client.js","path":"lib"}},{"name":"Shard","description":"Represents a shard","meta":{"line":21,"file":"Shard.js","path":"lib/core"}},{"name":"RESTManager","description":"A REST Manager which handles API requests and rate limits","construct":{"name":"RESTManager","description":"Handles API requests and rate limits","params":[{"name":"client","description":"Yuko client","type":[[["Client"]]]}]},"methods":[{"name":"request","description":"Create an API request","params":[{"name":"method","description":"The HTTP method","type":[[["String"]]]},{"name":"endpoint","description":"The endpoint URL","type":[[["String"]]]},{"name":"payload","description":"Request the payload","type":[[["Object"]]]},{"name":"contentType","description":"The HTTP content type","optional":true,"default":"\"application/json\"","type":[[["String"]]]}],"async":true,"returns":[[["Promise","<"],["any",">"]]],"meta":{"line":81,"file":"RESTManager.js","path":"lib/managers"}},{"name":"route","description":"Create a route","params":[{"name":"method","description":"The HTTP method","type":[[["String"]]]},{"name":"route","description":"The endpoint","type":[[["String"]]]}],"returns":[[["Route"]]],"meta":{"line":105,"file":"RESTManager.js","path":"lib/managers"}}],"meta":{"line":34,"file":"RESTManager.js","path":"lib/managers"}},{"name":"Channel","description":"Represents a various of channels","extends":[[["Base"]]],"meta":{"line":12,"file":"Channel.js","path":"lib/structures"}},{"name":"ClientUser","description":"An extended class of User","extends":[[["User"]]],"methods":[{"name":"editStatus","description":"Update the bot's status","params":[{"name":"status","description":"The bot's status; either \"online\", \"idle\", \"dnd\", or \"invisible\"","type":[[["String"]]]},{"name":"activity","description":"The bot's activity; null to clear","optional":true,"type":[[["Object"]]]},{"name":"activity.name","description":"The activity's name","optional":true,"type":[[["String"]]]},{"name":"activity.type","description":"The activity's type","optional":true,"type":[[["Number"]]]},{"name":"activity.url","description":"The stream URL. Currently supports YouTube and Twitch only","optional":true,"type":[[["String"]]]}],"meta":{"line":28,"file":"ClientUser.js","path":"lib/structures"}},{"name":"createDM","description":"Create a DM channel with a user","inherits":"User#createDM","inherited":true,"returns":[[["Promise","<"],["DMChannel",">"]]],"meta":{"line":32,"file":"User.js","path":"lib/structures"}}],"meta":{"line":13,"file":"ClientUser.js","path":"lib/structures"}},{"name":"DMChannel","description":"Represents a DM-based channels","extends":[[["Channel"]]],"methods":[{"name":"createMessage","description":"Create a message","params":[{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["Object",">"]]]},{"name":"options.messageReference","description":"The message reference used when replying to messages","optional":true,"type":[[["Object"]]]},{"name":"options.messageReference.channelID","description":"The ID of the channel where the message was referenced","optional":true,"type":[[["String"]]]},{"name":"options.messageReference.failIfNotExists","description":"Whether to throw an error when the message reference doesn't exist","optional":true,"type":[[["Boolean"]]]},{"name":"options.messageReference.guildID","description":"The ID of the guild where the message was referenced","optional":true,"type":[[["String"]]]},{"name":"options.messageReference.messageID","description":"The ID of the message which was referenced","type":[[["String"]]]},{"name":"options.tts","description":"Whether to send message as Text-to-Speech (TTS)","optional":true,"type":[[["Boolean"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":30,"file":"DMChannel.js","path":"lib/structures"}},{"name":"deleteMessage","description":"Delete a message","params":[{"name":"messageID","description":"The ID of the message","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":39,"file":"DMChannel.js","path":"lib/structures"}},{"name":"editMessage","description":"Edit a message","params":[{"name":"messageID","description":"The ID of the message","type":[[["String"]]]},{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["Object",">"]]]},{"name":"options.flags","description":"A number representing flags that will apply to the message","optional":true,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":52,"file":"DMChannel.js","path":"lib/structures"}},{"name":"getMessages","description":"Get multiple messages in this channel","returns":[[["Promise","<"],["Array","<"],["Message",">>"]]],"meta":{"line":60,"file":"DMChannel.js","path":"lib/structures"}}],"meta":{"line":10,"file":"DMChannel.js","path":"lib/structures"}},{"name":"Guild","description":"Represents a guild","extends":[[["Base"]]],"methods":[{"name":"edit","description":"Edit a guild","params":[{"name":"options","description":"The options properties","type":[[["Object"]]]},{"name":"options.afkChannelID","description":"The ID of the AFK channel","optional":true,"type":[[["String"]]]},{"name":"options.afkTimeout","description":"The timeout of AFK in voice channels (in seconds)","optional":true,"type":[[["Number"]]]},{"name":"options.banner","description":"The banner of the guild. Banner image must be as base64 data URI","optional":true,"type":[[["String"]]]},{"name":"options.defaultMessageNotifications","description":"The default message notifications of the guild","optional":true,"type":[[["Number"]]]},{"name":"options.description","description":"The description of the guild","optional":true,"type":[[["String"]]]},{"name":"options.discoverySplash","description":"The discovery splash of the guild. Discoery splash image must be as base 64 URI","optional":true,"type":[[["String"]]]},{"name":"options.explicitContentFilter","description":"The explicit content filter level of the guild","optional":true,"type":[[["Number"]]]},{"name":"options.features","description":"The enabled features of the guild","optional":true,"type":[[["Array","<"],["String",">"]]]},{"name":"options.icon","description":"The icon of the guild. Icon image must be as base64 data URI","optional":true,"type":[[["String"]]]},{"name":"options.name","description":"The name of the guild","optional":true,"type":[[["String"]]]},{"name":"options.ownerID","description":"The ID of the owner which wil be transferred to","optional":true,"type":[[["String"]]]},{"name":"options.preferredLocale","description":"The preferred guild language","optional":true,"type":[[["String"]]]},{"name":"options.publicUpdatesChannelID","description":"The ID of the channel where guild admins will receive Discord notifications","optional":true,"type":[[["String"]]]},{"name":"options.rulesChannelID","description":"The ID of the rule channel","optional":true,"type":[[["String"]]]},{"name":"options.splash","description":"The splash of the guild. Splash image must be as base64 data URI","optional":true,"type":[[["String"]]]},{"name":"options.systemChannelFlags","description":"The flags for the system channel","optional":true,"type":[[["Number"]]]},{"name":"options.systemChannelID","description":"The ID of the system channel","optional":true,"type":[[["String"]]]},{"name":"options.verificationLevel","description":"The verification level","optional":true,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["Guild",">"]]],"meta":{"line":71,"file":"Guild.js","path":"lib/structures"}}],"meta":{"line":26,"file":"Guild.js","path":"lib/structures"}},{"name":"GuildChannel","description":"Represents a channel found in a guild","extends":[[["Channel"]]],"meta":{"line":13,"file":"GuildChannel.js","path":"lib/structures"}},{"name":"Member","description":"Represents a guild members","extends":[[["Base"]]],"methods":[{"name":"addRole","description":"Add a role to a guild member","params":[{"name":"roleID","description":"The ID of the role","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":74,"file":"Member.js","path":"lib/structures"}},{"name":"ban","description":"Ban a member from a guild","params":[{"name":"deleteMessageDays","description":"Number of days to delete messages for","type":[[["Number"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":83,"file":"Member.js","path":"lib/structures"}},{"name":"edit","description":"Edit a guild member","params":[{"name":"options","description":"The options properties","type":[[["Object"]]]},{"name":"options.channelID","description":"The ID of the voice channel to move the user to","optional":true,"type":[[["String"]]]},{"name":"options.deaf","description":"Deafen the member","optional":true,"type":[[["Boolean"]]]},{"name":"options.mute","description":"Mute the member","optional":true,"type":[[["Boolean"]]]},{"name":"options.nick","description":"Set the member's nickname","optional":true,"type":[[["String"]]]},{"name":"options.roles","description":"An array of role IDs to be add to member","optional":true,"type":[[["Array","<"],["String",">"]]]}],"returns":[[["Promise","<"],["Member",">"]]],"meta":{"line":97,"file":"Member.js","path":"lib/structures"}},{"name":"remove","description":"Remove a member from a guild","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":105,"file":"Member.js","path":"lib/structures"}},{"name":"removeRole","description":"Remove a role from a guild member","params":[{"name":"roleID","description":"The ID of the role","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":114,"file":"Member.js","path":"lib/structures"}},{"name":"toUser","description":"Get the user data only","returns":[[["User"]]],"meta":{"line":122,"file":"Member.js","path":"lib/structures"}}],"meta":{"line":20,"file":"Member.js","path":"lib/structures"}},{"name":"Message","description":"Represents a message","extends":[[["Base"]]],"methods":[{"name":"delete","description":"Delete the message","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":50,"file":"Message.js","path":"lib/structures"}},{"name":"edit","description":"Edit a message","params":[{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["Object",">"]]]},{"name":"options.flags","description":"A number representing flags that will apply to the message","optional":true,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":62,"file":"Message.js","path":"lib/structures"}},{"name":"react","description":"Add a reaction to a message","params":[{"name":"reaction","description":"The reaction. `name:id` for custom emoji","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":71,"file":"Message.js","path":"lib/structures"}},{"name":"unreact","description":"Remove a reaction from a message","params":[{"name":"reaction","description":"The reaction. `name:id` for custom emoji","type":[[["String"]]]},{"name":"userID","description":"The ID of the user of the reaction","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":81,"file":"Message.js","path":"lib/structures"}}],"meta":{"line":33,"file":"Message.js","path":"lib/structures"}},{"name":"Permission","description":"Represents a permissions","extends":[[["Base"]]],"methods":[{"name":"has","description":"Check if guild member has this permission","params":[{"name":"permission","description":"The permission name","type":[[["String"]]]}],"returns":[[["Boolean"]]],"meta":{"line":25,"file":"Permission.js","path":"lib/structures"}}],"meta":{"line":12,"file":"Permission.js","path":"lib/structures"}},{"name":"Role","description":"Represents a role","extends":[[["Base"]]],"meta":{"line":20,"file":"Role.js","path":"lib/structures"}},{"name":"TextChannel","description":"Represents a text-based channels","extends":[[["GuildChannel"]]],"methods":[{"name":"createMessage","description":"Create a message","params":[{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["String",">"]]]},{"name":"options.messageReference","description":"The message reference used when replying to messages","optional":true,"type":[[["Object"]]]},{"name":"options.messageReference.channelID","description":"The ID of the channel where the message was referenced","optional":true,"type":[[["String"]]]},{"name":"options.messageReference.failIfNotExists","description":"Whether to throw an error when the message reference doesn't exist","optional":true,"type":[[["Boolean"]]]},{"name":"options.messageReference.guildID","description":"The ID of the guild where the message was referenced","optional":true,"type":[[["String"]]]},{"name":"options.messageReference.messageID","description":"The ID of the message which was referenced","type":[[["String"]]]},{"name":"options.tts","description":"Whether to send message as Text-to-Speech (TTS)","optional":true,"type":[[["Boolean"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":36,"file":"TextChannel.js","path":"lib/structures"}},{"name":"deleteMessage","description":"Delete a message","params":[{"name":"messageID","description":"The ID of the message","type":[[["String"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":45,"file":"TextChannel.js","path":"lib/structures"}},{"name":"editMessage","description":"Edit a message","params":[{"name":"messageID","description":"The ID of the message","type":[[["String"]]]},{"name":"options","description":"An object of options","type":[[["Object"]]]},{"name":"options.content","description":"The message options","optional":true,"type":[[["String"]]]},{"name":"options.embeds","description":"An array of embed objects","optional":true,"type":[[["Array","<"],["Object",">"]]]},{"name":"options.flags","description":"A number representing flags that will apply to the message","optional":true,"type":[[["Number"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":58,"file":"TextChannel.js","path":"lib/structures"}},{"name":"getMessages","description":"Get multiple messages in this channel","returns":[[["Promise","<"],["Array","<"],["Message",">>"]]],"meta":{"line":66,"file":"TextChannel.js","path":"lib/structures"}}],"meta":{"line":14,"file":"TextChannel.js","path":"lib/structures"}},{"name":"User","description":"Represents a user","extends":[[["Base"]]],"methods":[{"name":"createDM","description":"Create a DM channel with a user","returns":[[["Promise","<"],["DMChannel",">"]]],"meta":{"line":32,"file":"User.js","path":"lib/structures"}}],"meta":{"line":17,"file":"User.js","path":"lib/structures"}},{"name":"Collection","description":"Represents a collection of a base object","extends":[[["Map"]]],"methods":[{"name":"add","description":"Add an object","params":[{"name":"obj","description":"The object data","type":[[["Object"]]]},{"name":"obj.id","description":"The ID of the object","type":[[["String"]]]},{"name":"extra","description":"An extra parameter the constructor may need","optional":true,"type":[[["Class"]]]},{"name":"replace","description":"Whether to replace an existing object with the same ID","optional":true,"type":[[["Boolean"]]]}],"returns":{"types":[[["Class"]]],"description":"The existing or newly created object"},"meta":{"line":24,"file":"Collection.js","path":"lib/utils"}},{"name":"every","description":"Returns true if all elements satisfy the condition","params":[{"name":"func","description":"A function that takes an object and returns true or false","type":[[["function"]]]}],"returns":{"types":[[["Boolean"]]],"description":"Whether or not all elements satisfied the condition"},"meta":{"line":61,"file":"Collection.js","path":"lib/utils"}},{"name":"filter","description":"Return all the objects that make the function evaluate true","params":[{"name":"func","description":"A function that takes an object and returns true if it matches","type":[[["function"]]]}],"returns":{"types":[[["Array","<"],["Class",">"]]],"description":"An array containing all the objects that matched"},"meta":{"line":76,"file":"Collection.js","path":"lib/utils"}},{"name":"find","description":"Return the first object to make the function evaluate true","params":[{"name":"func","description":"A function that takes an object and returns true if it matches","type":[[["function"]]]}],"returns":{"types":[[["Class"]]],"description":"The first matching object, or undefined if no match","nullable":true},"meta":{"line":93,"file":"Collection.js","path":"lib/utils"}},{"name":"map","description":"Return an array with the results of applying the given function to each element","params":[{"name":"func","description":"A function that takes an object and returns something","type":[[["function"]]]}],"returns":{"types":[[["Array"]]],"description":"An array containing the results"},"meta":{"line":108,"file":"Collection.js","path":"lib/utils"}},{"name":"random","description":"Get a random object from the Collection","returns":{"types":[[["Class"]]],"description":"The random object, or undefined if there is no match","nullable":true},"meta":{"line":122,"file":"Collection.js","path":"lib/utils"}},{"name":"reduce","description":"Returns a value resulting from applying a function to every element of the collection","params":[{"name":"func","description":"A function that takes the previous value and the next item and returns a new value","type":[[["function"]]]},{"name":"initialValue","description":"The initial value passed to the function","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"The final result"},"meta":{"line":139,"file":"Collection.js","path":"lib/utils"}},{"name":"remove","description":"Remove an object","params":[{"name":"obj","description":"The object","type":[[["Object"]]]},{"name":"obj.id","description":"The ID of the object","type":[[["String"]]]}],"returns":{"types":[[["Class"]]],"description":"The removed object, or null if nothing was removed","nullable":true},"meta":{"line":157,"file":"Collection.js","path":"lib/utils"}},{"name":"some","description":"Returns true if at least one element satisfies the condition","params":[{"name":"func","description":"A function that takes an object and returns true or false","type":[[["function"]]]}],"returns":{"types":[[["Boolean"]]],"description":"Whether or not at least one element satisfied the condition"},"meta":{"line":173,"file":"Collection.js","path":"lib/utils"}},{"name":"update","description":"Update an object","params":[{"name":"obj","description":"The updated object data","type":[[["Object"]]]},{"name":"obj.id","description":"The ID of the object","type":[[["String"]]]},{"name":"extra","description":"An extra parameter the constructor may need","optional":true,"type":[[["Class"]]]},{"name":"replace","description":"Whether to replace an existing object with the same ID","optional":true,"type":[[["Boolean"]]]}],"returns":{"types":[[["Class"]]],"description":"The updated object"},"meta":{"line":191,"file":"Collection.js","path":"lib/utils"}}],"meta":{"line":9,"file":"Collection.js","path":"lib/utils"}},{"name":"Queue","description":"A sequentializing utility class used to efficiently manage promises.","methods":[{"name":"shift","description":"Unlocks the queue for the next promise.","meta":{"line":19,"file":"Queue.js","path":"lib/utils"}},{"name":"wait","description":"Waits for the last promise to complete and queues a new one.","returns":{"types":[[["Promise","<"],["any",">"]]],"description":"The promise that was queued.","nullable":true},"meta":{"line":31,"file":"Queue.js","path":"lib/utils"}}],"meta":{"line":7,"file":"Queue.js","path":"lib/utils"}}],"interfaces":[],"typedefs":[],"externals":[]}
